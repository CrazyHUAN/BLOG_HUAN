(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{451:function(t,v,_){"use strict";_.r(v);var e=_(27),n=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"算法复杂度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#算法复杂度"}},[t._v("#")]),t._v(" 算法复杂度")]),t._v(" "),_("p",[t._v("在研究算法的时候,经常会见到用大O表示法 ( O(...) ) 来描述算法的复杂度,那么规则上是如何定义复杂度的呢:")]),t._v(" "),_("p",[t._v("算法的复杂度描述有两个维度:")]),t._v(" "),_("h3",{attrs:{id:"时间复杂度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#时间复杂度"}},[t._v("#")]),t._v(" 时间复杂度 :")]),t._v(" "),_("blockquote",[_("p",[t._v("概念: 执行算法所需要的 时间, 也就是计算工作量"),_("br"),t._v("\n理论上具体的时间是无法计算的,除非上机测试实际跑一下. 然而理论上又讲,一个算法耗费的时间与算法的操作执行的次数成正比,那么就可以\n用算法的执行次数来描述算法耗费的时间,这就是时间频度")])]),t._v(" "),_("h3",{attrs:{id:"空间复杂度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#空间复杂度"}},[t._v("#")]),t._v(" 空间复杂度 :")]),t._v(" "),_("blockquote",[_("p",[t._v("概念: 执行算法所需要的 空间, 也就是占用内存. 寄存器的大小"),_("br"),t._v("\n利用算法的空间复杂度,可以预估程序执行时所需要耗费的内存. 存储空间分为两个部分:")]),t._v(" "),_("ul",[_("li",[t._v("静态空间: 主要包括代码空间. 数据空间 (常量. 简单变量. )的空间, 属于固定部分, 与输入/输出数据的大小无关")]),t._v(" "),_("li",[t._v("可变空间: 主要是动态分配的空间, 以及递归栈所需的空间, 与算法有关")])])]),t._v(" "),_("h2",{attrs:{id:"大o表示法-渐进时间复杂度"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#大o表示法-渐进时间复杂度"}},[t._v("#")]),t._v(" 大O表示法 -- 渐进时间复杂度")]),t._v(" "),_("blockquote",[_("p",[t._v("定义:  T[n] = O( f(n) )")])]),t._v(" "),_("p",[t._v("这一定义表示 函数 T(n)(时间复杂度) 受限于 f(n)."),_("br"),t._v("\n通俗的说,如果一个问题的规模是 n ,那么解决这一问题的时间就是 f(n). 那么当 n 逐渐加大, 那么加大到极限情况则称之为算法的 "),_("strong",[t._v("渐进时间复杂度")])]),t._v(" "),_("p",[t._v("时间复杂度的度量守则: 大O阶")]),t._v(" "),_("blockquote",[_("ol",[_("li",[t._v("用常数 1 取代运行时间中的所有加法常数")]),t._v(" "),_("li",[t._v("只要高阶项 , 不要低阶项")]),t._v(" "),_("li",[t._v("不要高阶项系数")])])]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",{staticStyle:{"text-align":"center"}},[t._v("算法执行次数的函数")]),t._v(" "),_("th",[t._v("大O阶(时间复杂度)")]),t._v(" "),_("th",[t._v("术语")])])]),t._v(" "),_("tbody",[_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("12")]),t._v(" "),_("td",[t._v("O(1)")]),t._v(" "),_("td",[t._v("常数阶")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("2n + 3")]),t._v(" "),_("td",[t._v("O(N)")]),t._v(" "),_("td",[t._v("线性阶")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("3n^2 + 2n + 1")]),t._v(" "),_("td",[t._v("O(n^2)")]),t._v(" "),_("td",[t._v("平方阶")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("5 log n + 20")]),t._v(" "),_("td",[t._v("O(log N)")]),t._v(" "),_("td",[t._v("对数阶")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("2n + 3n log n + 1")]),t._v(" "),_("td",[t._v("O(N log N)")]),t._v(" "),_("td",[t._v("线性对数阶")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("2 n^3 + 3n^2 + 2n + 1")]),t._v(" "),_("td",[t._v("O(n^3)")]),t._v(" "),_("td",[t._v("立方阶")])]),t._v(" "),_("tr",[_("td",{staticStyle:{"text-align":"center"}},[t._v("2^n")]),t._v(" "),_("td",[t._v("O(2^n)")]),t._v(" "),_("td",[t._v("指数阶")])])])]),t._v(" "),_("p",[t._v("时间复杂度 从小到大 排序:")]),t._v(" "),_("blockquote",[_("p",[t._v("O(1) < O(logN) < O(N) < O(nLogN) < O(n^2) < O(n^3) < O(2^n) < O(n^n)")])]),t._v(" "),_("h3",{attrs:{id:"o-1-常数阶"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#o-1-常数阶"}},[t._v("#")]),t._v(" O(1) -- 常数阶")]),t._v(" "),_("p"),t._v(" "),_("h2",{attrs:{id:"时空取舍"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#时空取舍"}},[t._v("#")]),t._v(" 时空取舍")]),t._v(" "),_("p",[t._v("时间与空间都是计算机资源的重要部分")])])}),[],!1,null,null,null);v.default=n.exports}}]);